// grappa
#include <Grappa.hpp>
#include <Collective.hpp>

using namespace Grappa;

// stl
#include <vector>
#include <unordered_map>

// query library
#include "relation_io.hpp"
#include "MatchesDHT.hpp"
#include "utils.h"

// graph gen
#include "generator/make_graph.h"
#include "generator/utils.h"
#include "grappa/timer.h"
#include "grappa/common.h"
#include "grappa/graph.hpp"
#include "prng.h"

template < typename T >                                                                                                
struct Relation {
    GlobalAddress<T> data;
    size_t numtuples;
};  

// SPLIT ME HERE

void query() {

    // SPLIT ME HERE
}


}

int main(int argc, char** argv) {
    init(&argc, &argv);

    run([] {
    	query();
    	Statistics::merge_and_print();
    }

    finalize();
    return 0;
}
